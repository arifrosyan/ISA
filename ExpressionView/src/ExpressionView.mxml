<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx = "http://www.adobe.com/2006/mxml"
	xmlns:view = "ch.unil.cbg.ExpressionView.view.*"
	layout = "absolute"
	width = "100%" 
	height = "100%"
	scriptTimeLimit = "60" 
	horizontalScrollPolicy="off" 
	verticalScrollPolicy="off" 
	applicationComplete="applicationCompleteHandler()" viewSourceURL="srcview/index.html">
	
	<mx:Script>
		<![CDATA[
			import ch.unil.cbg.ExpressionView.view.*;
			import ch.unil.cbg.ExpressionView.events.*;
			import ch.unil.cbg.ExpressionView.model.*;
			
			import mx.events.ResizeEvent;
			import mx.controls.Alert;
			
			import flash.display.StageAlign;
			import flash.display.StageScaleMode;
			import flash.system.Capabilities;
			

			private var menuBar:MenuBar;
			private var mainCanvas:MainCanvas;
			private var statusBar:StatusBar;

			// raw data
			private var rawged:GeneExpressionData = new GeneExpressionData();
			// possibly filtered data
			private var ged:GeneExpressionData = new GeneExpressionData();
			private var bytes:ByteArray = new ByteArray();
			
			private var oldStageWidth:Number;
			private var oldStageHeight:Number;
			
			private var filename:String;
			private var loader:URLLoader;
			
			private function applicationCompleteHandler(): void {

				if ( !menuBar ) {
					menuBar = new MenuBar;
					menuBar.setStyle("borderStyle", "solid");
					menuBar.horizontalScrollPolicy = "off";
					menuBar.verticalScrollPolicy = "off";
					addChild(menuBar);
				}
				
				if ( !mainCanvas ) {
					mainCanvas = new MainCanvas();
					mainCanvas.setStyle("borderStyle", "solid");
					mainCanvas.horizontalScrollPolicy = "off";
					mainCanvas.verticalScrollPolicy = "off";
					addChild(mainCanvas);
				}

				if ( !statusBar ) {
					statusBar = new StatusBar();
					statusBar.setStyle("borderStyle", "solid");
					statusBar.horizontalScrollPolicy = "off";
					statusBar.verticalScrollPolicy = "off";
					addChild(statusBar);
				}

				addEventListener(MenuEvent.OPEN, processFileHandler);
				rawged.addEventListener(GEDCompleteEvent.GEDCOMPLETEEVENT, GEDCompleteHandler);
				rawged.addEventListener(UpdateStatusBarEvent.UPDATESTATUSBAREVENT, updateStatusBarHandler);

				stage.scaleMode = StageScaleMode.NO_SCALE;
				stage.align = StageAlign.TOP_LEFT;
				stage.addEventListener(Event.RESIZE, resizeHandler);
				stage.addEventListener(MenuEvent.FULLSCREEN, toggleFullScreenHandler);
				
				filename = Application.application.parameters.filename;
				if ( filename != "" ) {
					var request:URLRequest = new URLRequest(filename);
					loader = new URLLoader();
					loader.dataFormat = URLLoaderDataFormat.BINARY;
					loader.addEventListener(ProgressEvent.PROGRESS, fileLoadProgressHandler);
					loader.addEventListener(Event.COMPLETE, fileLoadCompleteHandler);
					loader.load(request);
				}
							
			}
			
			private function fileLoadProgressHandler(event:ProgressEvent):void {
				var status:String = "loading " + filename + "..." + int(event.bytesLoaded/event.bytesTotal*100) + "% done";
        		dispatchEvent(new UpdateStatusBarEvent(status)); 		
			}

			private function fileLoadCompleteHandler(event:Event):void {
				dispatchEvent(new MenuEvent(MenuEvent.OPEN, [loader.data]));
				loader.removeEventListener(ProgressEvent.PROGRESS, fileLoadProgressHandler);
        		dispatchEvent(new UpdateStatusBarEvent("")); 					
				loader.removeEventListener(Event.COMPLETE, fileLoadCompleteHandler);		
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);

				if ( menuBar ) {
					menuBar.x = 0;
					menuBar.y = 0
					menuBar.percentWidth = 100;
					menuBar.height = 50;
				}

				if ( mainCanvas ) {
					mainCanvas.x = 0;
					mainCanvas.y = 50;
					mainCanvas.percentWidth = 100;
					mainCanvas.height = stage.stageHeight - 70;
				}
				
				if ( statusBar ) {
					statusBar.x = 0;
					statusBar.y = stage.stageHeight - 20;
					statusBar.percentWidth = 100;
					statusBar.height = 20;
				}
									
			}
						
			private function resizeHandler(event:Event):void {
				var scalex:Number = stage.stageWidth / oldStageWidth;
				var scaley:Number = stage.stageHeight / oldStageHeight;
				dispatchEvent(new ResizeBrowserEvent(scalex, scaley));
				invalidateDisplayList();
				oldStageWidth = stage.stageWidth;
				oldStageHeight = stage.stageHeight;
			}

			private function toggleFullScreenHandler(event:MenuEvent):void {
				var screen:String = event.data[0];
				if ( screen == "normal" ) {
					
		            var regExp:RegExp = new RegExp("mac", "i");
            		var match:Boolean = regExp.test(Capabilities.os)
					if ( match ) {
						var alert:String = "The fullscreen mode on " + Capabilities.os;
						alert += " is NOT working properly due to a bug in the Flash Player. ";
						alert += "For instance opening files, exporting PDFs, ";
						alert += "or zooming out is doomed. Sorry."; 
						Alert.show(alert , 'Warning', mx.controls.Alert.OK)
					}
					stage.displayState = StageDisplayState.FULL_SCREEN;
				} else {
					stage.displayState = StageDisplayState.NORMAL;					
				}
			}

			// initilize unlimited Bitmaps
			private function processFileHandler(event:MenuEvent): void {
				bytes = event.data[0];				
				bytes.position = 0;
				
				var identifier:String = bytes.readUTFBytes(18);
				
				if ( identifier != "ExpressionViewFile" ) {
					Alert.show('Not an ExpressionView file.', 'Error', mx.controls.Alert.OK);
					return;				
				}
				
				dispatchEvent(new UpdateStatusBarEvent("parsing file"));
				rawged.initialize(bytes);

			}
			
			private function GEDCompleteHandler(event:GEDCompleteEvent): void {
				ged = rawged;
				dispatchEvent(new UpdateGEDataEvent([rawged,ged]));
				dispatchEvent(new UpdateStatusBarEvent("")); 			
			}

			private function updateStatusBarHandler(event:UpdateStatusBarEvent): void {
				dispatchEvent(new UpdateStatusBarEvent(event.statusbarcontent)); 			
			}
			
		]]>
	</mx:Script>

	<mx:Style source="ch/unil/cbg/ExpressionView/styles/global.css"/>
	<mx:Style source="ch/unil/cbg/ExpressionView/styles/panel.css"/>
	<mx:Style source="ch/unil/cbg/ExpressionView/styles/menu.css"/>
	
</mx:Application>
